#!/bin/sh

set -x -e

upstream="upstream"

github_api() {
    eval `echo "" | git credential-cache get`
    url="https://api.github.com/$2"
    curl -s -u "$username:$password" -X "$1" -d "$3" "$url"
}

target() {
    git remote show -n "$upstream" | awk -F/ '/Push/ { print $4 "/" $5 }'
}

user() {
    git remote show -n origin | awk -F/ '/Push/ { print $4 }'
}

get_number() {
    awk -F: '/"number":/ { print $2 }' | tr -d ' ,'
}

github_pull_request() {
    branch=`git branch | awk '/^\*/ { print $2 }'`
    user=`user`
    git push origin "$branch"

    if test -z "$1"; then
	message=`mktemp`
	"$EDITOR" "$message"
	title=`head -1 "$message"`
	body=`tail -n +2 "$message" | sed 's/$/\\\\n/'`
	data="{ \"title\": \"$title\", \"body\": \"$body\","
    else
	issue="$1"
	data="{ \"issue\": \"$issue\","
    fi

    head="$user:$branch"
    base="master"
    echo "$data \"head\": \"$head\", \"base\": \"$base\" }" > TMP
    github_api POST "repos/`target`/pulls" "@TMP" | get_number
    rm -f TMP
}

get_parent() {
    awk -F\" 'BEGIN { p=0 } /parent/ { p=1 } p && /full_name/ { print $4; exit }'
}

github_parent() {
    github_api GET "repos/$1" "" | get_parent
}

git_clone_dir() {
    git clone "https://github.com/$1" $2 2>&1 | awk -F\' '/Cloning into/ { print $2 }'
}

github_clone() {
    dir=`git_clone_dir "$1" "$2"`
    parent=`github_parent "$1"`
    test -n "$parent" && (cd $dir; git remote add upstream "https://github.com/$parent")
}

github_new_repo() {
    github_api POST user/repos "{ \"name\":\"$1\" }"
}

github_remove_repo() {
    github_api DELETE "repos/$1"
}

github_close_issue() {
    github_api PATCH "repos/`target`/issues/$1" "{ \"state\":\"closed\" }"
}

github_new_issue() {
    message=`mktemp`
    "$EDITOR" "$message"
    title=`head -1 "$message"`
    body=`tail -n +2 "$message" | sed 's/$/\\\\n/'`
    echo "{ \"title\": \"$title\", \"body\": \"$body\" }" > TMP
    github_api POST "repos/`target`/issues" "@TMP"
    rm -f TMP
}

github_help() {
    cat <<EOF
git hub clone <user/repo>
git hub close <issue>
git hub issue
git hub new <repo>
git hub pr
git hub pr <issue>
git hub rm <user/repo>
EOF
}

cmd="$1"
shift
case "$cmd" in
    clone) github_clone "$@" ;;
    close) github_close_issue "$@" ;;
    help) github_help ;;
    issue) github_new_issue "$@" ;;
    new) github_new_repo "$@" ;;
    rm) github_remove_repo "$@" ;;
    pr) github_pull_request "$@" ;;
esac
